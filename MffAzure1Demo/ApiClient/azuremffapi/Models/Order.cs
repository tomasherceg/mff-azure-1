// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace ApiClient.Models
{
    public partial class Order
    {
        private DateTimeOffset? _createdDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? CreatedDate
        {
            get { return this._createdDate; }
            set { this._createdDate = value; }
        }
        
        private int? _id;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Id
        {
            get { return this._id; }
            set { this._id = value; }
        }
        
        private string _number;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Number
        {
            get { return this._number; }
            set { this._number = value; }
        }
        
        private double? _price;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public double? Price
        {
            get { return this._price; }
            set { this._price = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Order class.
        /// </summary>
        public Order()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken createdDateValue = inputObject["CreatedDate"];
                if (createdDateValue != null && createdDateValue.Type != JTokenType.Null)
                {
                    this.CreatedDate = ((DateTimeOffset)createdDateValue);
                }
                JToken idValue = inputObject["Id"];
                if (idValue != null && idValue.Type != JTokenType.Null)
                {
                    this.Id = ((int)idValue);
                }
                JToken numberValue = inputObject["Number"];
                if (numberValue != null && numberValue.Type != JTokenType.Null)
                {
                    this.Number = ((string)numberValue);
                }
                JToken priceValue = inputObject["Price"];
                if (priceValue != null && priceValue.Type != JTokenType.Null)
                {
                    this.Price = ((double)priceValue);
                }
            }
        }
    }
}
